package Java6array;
import java.util.Arrays;

/**
 * @Author: 19261
 * @Date: 2021/8/28 18:11
 */
public class ArrayPractice {
    //冒泡排序数组 升序和降序
    public static void main(String[] args) {
        int[] arr={1,3,9,6,5,8,0,7};
        int[] a={2,5,8,1,6,9};
        Arrays.sort(a);
        System.out.println(Arrays.toString(a));;
        bubbleSort(arr);
        System.out.println(Arrays.toString(arr));
    }
    public static void bubbleSort(int[] a){
        for (int bound=0;bound<a.length;bound++) {
            for(int cur=a.length-1;cur>bound;cur--){
                if(a[cur-1]>a[cur]){
                    int temp=a[cur-1];
                    a[cur-1]=a[cur];
                    a[cur]=temp;
                }
            }
        }
    }

    //数组逆序
    public static void main5(String[] args) {
        int[] arr={2,4,6,8};
        reverse(arr);
        System.out.println(Arrays.toString(arr));
    }
    public static void reverse(int[] a){
        int left=0;
        int right=a.length-1;
        while(left<right){
            int temp=a[left];
            a[left]=a[right];
            a[right]=temp;
            left++;
            right--;
        }
    }

    //查找数组中指定元素(二分查找)
    public static void main4(String[] args) {
        int[] arr={1,3,5,7,9};
        int num=7;
        int result=binarySearch(arr,num);
        System.out.println(result);
    }
    public static Integer binarySearch(int[] a,int num){
        int left=0;
        int right=a.length-1;
        while(left<right){
            int mid=(left+right)/2;
            if(a[mid]==num){
                return mid;
            }
            if(a[mid]<num){
                left=mid+1;
            }
            if(a[mid]>num){
                right=mid-1;
            }
        }
        return null;
    }

    //查找数组中指定元素,返回下标
    public static void main3(String[] args) {
        int[] arr={2,5,4,7,8,0};
        int num=4;
        int result = findNum(arr, num);
        System.out.println(result);
    }
    public static Integer findNum(int[] a,int num){
        for(int i=0;i<a.length;i++){
            if (num == a[i]) {
                return i;
            }
        }
        return null;
    }

    //字符串拷贝方法实现
    public static void main2(String[] args) {
        int[] arr={1,3,5,7,9};
//        int[] a=arr;
//        a[0]=2;
//        System.out.println(arr[0]);
        int[] a=copyA(arr);
        int[] aa=Arrays.copyOf(arr,arr.length);
        System.out.println(Arrays.toString(aa));
        a[0]=0;
        System.out.println(Arrays.toString(a));
        System.out.println(Arrays.toString(arr));
    }
    public static int[] copyA(int[] arr){
        int[] a=new int[arr.length];
        for (int i = 0; i < arr.length; i++) {
            a[i] = arr[i];
        }
        return a;
    }

    //数字转化为字符串
    public static void main1(String[] args) {
        int[] arr={5,4,3,2,1};
        System.out.println(Arrays.toString(arr));
        String str=transformS(arr);
        System.out.println(str);
    }
    public static String transformS(int[] a){
        String s="[";
        for (int i = 0; i < a.length; i++) {
            s=s+a[i];
            if (i != a.length - 1) {
                s+=",";
            }
        }
        s+="]";
        return s;
    }
}
